//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;

public class LineChart {
	Vector3 position = new Vector3(0,0,1);
	float horzScale = 0.02f;
	float vertScale = 1.0f;
	ArrayList data = new ArrayList();
	int size = 60;
	public LineRenderer line;
	
	GameObject obj;
	
	public LineChart(GameObject cam, Vector3 pos,Color c,  int count) {
		
		position = pos;
		obj = new GameObject();
		obj.name = "Chart Object";
		obj.transform.parent = cam.transform;
		obj.transform.localPosition = new Vector3(0,0,0);
		obj.transform.localRotation = Quaternion.identity;
		
		line = obj.AddComponent<LineRenderer>();
		size = count;
		horzScale = 1.0f / count;
		line.useWorldSpace = false;
		line.GetComponent<Renderer>().material.shader = Shader.Find("Diffuse");
		line.GetComponent<Renderer>().material.color = c;
		line.SetWidth(0.005f,0.005f);
		line.SetVertexCount(size);
		for(int i = 0; i < size; i++)
			AddData(0.0f);
		
	}
	
	public void AddData(float v) {
		data.Add(v);
		if (data.Count > size)
			data.RemoveAt(0);
	}
	
	public void Update() {
		for(int i = 0; i < data.Count; i++)
			line.SetPosition(i, new Vector3(position[0]+i*horzScale ,position[1]+vertScale*(float)data[i],position[2]));
	}
}


